const shared = require("./helpers");
const { expect } = require("@playwright/test");
const { assertElement, assertText, getValue } = require("qawolf");
const faker = require("faker");
const { getInbox } = require("./getInbox");

(async () => {
  const TEST_NAME = "Developer role can hide node modules";

  // log in
  const { page } = await logIn({ userId: 10 });
  await assertText(page, "Library");
  
  // go to recording "Replay with node module logs"
  await page.click('text=Replay with node module logs');
  
  // assert recording loaded
  await expect(page.locator("#video")).toBeVisible();
  
  // go to DevTools
  await page.click("text=ViewerDevTools");
  
  // assert DevTools loaded
  await assertText(page, "Console");
  
  try {
    await expect(page.locator('[data-test-state="open"]')).toBeVisible({ timeout: 5000 });
  } catch {
    await page.click('[data-test-state="closed"]');
  }
  
  // ensure node module logs hidden
  if (await page.isChecked("#FilterToggle-nodeModules")) {
    await page.click("#FilterToggle-nodeModules");
  }
  await expect(page.locator("#FilterToggle-nodeModules")).not.toBeChecked();
  const messages = page.locator('[data-test-name="Message"]');
  
  // show node module logs
  const messagesCountHidden = await messages.count();
  await page.click("#FilterToggle-nodeModules");
  await expect(page.locator("#FilterToggle-nodeModules")).toBeChecked();
  await page.waitForTimeout(7000);
  
  // assert messages changed
  const messagesCountNotHidden = await messages.count();
  console.log("MESSAGES: ", messagesCountHidden, messagesCountHidden);
  expect(messagesCountHidden).toBeLessThan(messagesCountNotHidden);
  
  // hide node module logs
  await page.click("#FilterToggle-nodeModules");
  await expect(page.locator("#FilterToggle-nodeModules")).not.toBeChecked();
  
  // assert messages hidden
  const lastMessageCount = await messages.count();
  expect(lastMessageCount).toEqual(messagesCountHidden);
  

  process.exit();
})();